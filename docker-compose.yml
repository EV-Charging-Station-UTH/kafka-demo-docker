services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    hostname: zookeeper
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - kafka-demo-net

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    hostname: kafka
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: kafka
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-demo-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - kafka-demo-net

  producer:
    image: trandinh0506/kafka-demo-producer:latest
    container_name: producer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:29092
      PRODUCER_PORT: 8082
      INSTANCE_ID: producer
    ports:
      - "8082:8082"
    networks:
      - kafka-demo-net

  consumer:
    image: trandinh0506/kafka-demo-consumer:latest
    container_name: consumer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: demo-topic
      KAFKA_GROUP_ID: demo-group
      CONSUMER_PORT: 8083
      INSTANCE_ID: consumer
    ports:
      - "8083:8083"
    networks:
      - kafka-demo-net


  frontend:
    image: trandinh0506/kafka-demo-frontend:latest
    container_name: kafka-demo-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - producer
      - consumer
    networks:
      - kafka-demo-net

networks:
  kafka-demo-net:
    driver: bridge

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
